scalar Time

type Setting {
  id: ID!
  aboutMe: AboutMe!
  timeline: Timeline!
  createdAt: Time!
  updatedAt: Time!
  deletedAt: Time!
}

extend type Query {
  settings: [Setting]!
  setting(id: ID!): Setting
}

extend type Mutation {
  createSetting(newSetting: NewSetting!): Setting!
  updateSetting(id: ID!, newSetting: NewSetting!): Setting!
  deleteSetting(id: ID!): Setting!
}

type AboutMe {
  id: ID!
  name: String!
  description: String!
  content: String!
  imgUrl: String!
  settingID: ID!
  createdAt: Time!
  updatedAt: Time!
  deletedAt: Time!
}

extend type Query {
  aboutMes: [AboutMe]!
  aboutMe(id: ID!): AboutMe
}

extend type Mutation {
  createAboutMe(newAboutMe: NewAboutMe): AboutMe!
  updateAboutMe(id: ID!, newAboutMe: NewAboutMe): AboutMe!
  deleteAboutMe(id: ID!): AboutMe!
}

type Timeline {
  iD: ID!
  slug: String!
  name: String!
  description: String!
  thumbnail: String!
  images: [Image]!
  eventDate: Time!
  icon: Icon!
  settingID: ID!
  createdAt: Time!
  updatedAt: Time!
  deletedAt: Time!
}

extend type Query {
  timelines: [Timeline]!
  timeline(id: ID!): Timeline
}

extend type Mutation {
  createTimeline(newTimeline: NewTimeline!): Timeline!
  updateTimeline(id: ID!, newTimeline: NewTimeline): Timeline!
  deleteTimeline(id: ID!): Timeline!
}
